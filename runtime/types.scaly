use LLVM.*

define Double (double) {}
define Long (i64) {}
define Integer (i32) {}
define Byte (i8) {}

define Boolean (i1)
{
    operator 'as Integer' returns Integer
        LLVM.zext[i32](this)
}

define true 0B1
define false 0B0

define Size (i64)
{
    operator 'as Integer' returns Integer
        LLVM.trunc[i32](this)
}

define Pointer[T] (pointer)
{
    operator * returns T
        LLVM.load[T](this)
}

define Option[T] (pointer)
{
    operator = returns OptionComparer[T]
        OptionComparer[T](this)
}

define OptionComparer[T] (pointer)
{
;    operator (other: Option[T]) returns Boolean
;        ; pointer comparison to go here

;    operator (null) returns Boolean
;        ; pointer comparison to go here
}

define null
{
    operator = returns NullComparer
        NullComparer
}

define NullComparer
{
;    operator (other: Option[T]) returns Boolean
;        ; pointer comparison to go here

;    operator (null) returns Boolean
;        true
}
