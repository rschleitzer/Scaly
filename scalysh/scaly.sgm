  <!DOCTYPE grammar SYSTEM "grammar.dtd">
  
  <grammar>

    <syntax id = Program                                        program
        <content identifier                                     property = name
        <content link = File                  multiple          property = files

    <syntax id = File                                           top
        <content link = Statement             multiple optional property = statements

    <syntax id = Block                                          base = PrimaryExpression
        <content link = leftCurly
        <content link = Statement             multiple          property = statements
        <content link = rightCurly

    <syntax id = Statement                    multiple abstract
        <content link = Declaration
        <content link = Expression

    <syntax id = Declaration                  multiple abstract base = Statement
        <content link = Let
        <content link = Mutable
        <content link = Var
        <content link = Assignment
        <content link = Class
        <content link = Method
        <content link = Function

    <syntax id = Let                                            base = Declaration
        <content link = let
        <content link = Binding                                 property = binding

    <syntax id = Mutable                                        base = Declaration
        <content link = mutable
        <content link = Binding                                 property = binding

    <syntax id = Var                                            base = Declaration
        <content link = var
        <content link = Binding                                 property = binding

    <syntax id = Binding
        <content identifier                                     property = name
        <content link = TypeAnnotation                 optional property = typeAnnotation
        <content link = Expression            multiple          property = expressions

    <syntax id = Assignment                                     base = Declaration
        <content link = set
        <content link = Expression            multiple          property = lValue
        <content link = colon
        <content link = Expression            multiple          property = rValue

    <syntax id = Expression                   multiple          base = Statement
        <content link = PrimaryExpression                       property = primary
        <content link = Postfix               multiple optional property = postfixes

    <syntax id = PrimaryExpression            multiple abstract
        <content link = IdentifierExpression
        <content link = LiteralExpression
        <content link = ThisExpression
        <content link = ObjectExpression
        <content link = Block

    <syntax id = IdentifierExpression                           base = PrimaryExpression
        <content identifier                                     property = name

    <syntax id = LiteralExpression                              base = PrimaryExpression
        <content literal                                        property = literal

    <syntax id = ThisExpression                                 base = PrimaryExpression
        <content link = this

    <syntax id = Postfix                      multiple abstract
        <content link = MemberAccess
        <content link = Subscript

    <syntax id = MemberAccess                                   base = Postfix
        <content link = dot
        <content identifier                                     property = member

    <syntax id = Subscript                                      base = Postfix
        <content link = leftBracket
        <content link = ExpressionElement     multiple          property = expressions
        <content link = rightBracket

    <syntax id = ExpressionElement            multiple
        <content link = Expression                              property = expression
        <content link = comma                          optional

    <syntax id = ObjectExpression                               base = PrimaryExpression
        <content link = leftParen
        <content link = ObjectItem            multiple optional property = items
        <content link = rightParen

    <syntax id = ObjectItem                   multiple
        <content link = Expression                              property = expression
        <content link = comma                          optional

    <syntax id = Class                                          base = Declaration
        <content link = class
        <content link = Name                                    property = name
        <content link = TypeInheritanceClause          optional property = typeInheritanceClause
        <content link = Object                         optional property = contents
        <content link = Block                          optional property = body

    <syntax id = Name
        <content identifier                                     property = name
        <content link = Extension             multiple optional property = extensions

    <syntax id = Extension                    multiple
        <content link = dot
        <content identifier                                     property = name

    <syntax id = TypeInheritanceClause
        <content link = extends
        <content link = Name                                    property = name

    <syntax id = Object
        <content link = leftParen
        <content link = Component             multiple optional property = components
        <content link = rightParen

    <syntax id = Component                    multiple
        <content identifier                                     property = name
        <content link = TypeAnnotation                 optional property = typeAnnotation
        <content link = comma                          optional

    <syntax id = Function                                       base = Declaration
        <content link = function
        <content link = Procedure                               property = procedure

    <syntax id = Method                                         base = Declaration
        <content link = method
        <content link = Procedure                               property = procedure

    <syntax id = Procedure
        <content identifier                                     property = name
        <content link = Object                         optional property = input
        <content link = TypeAnnotation                 optional property = output
        <content link = Block                          optional property = body

    <syntax id = TypeAnnotation
        <content link = colon
        <content link = Type                                    property = name

    <syntax id = Type
        <content identifier                                     property = name
        <content link = TypePostfix           multiple optional property = postfixes
        <content link = LifeTime                       optional property = lifeTime

    <syntax id = TypePostfix                  multiple abstract
        <content link = Optional
        <content link = IndexedType

    <syntax id = Optional                                       base = TypePostfix
        <content link = question

    <syntax id = IndexedType                                    base = TypePostfix
        <content link = leftBracket
        <content link = Type                           optional property = key
        <content link = rightBracket

    <syntax id = LifeTime                              abstract
        <content link = Root
        <content link = Local
        <content link = Reference
        <content link = Thrown

    <syntax id = Root                                           base = LifeTime
        <content link = dollar

    <syntax id = Local                                          base = LifeTime
        <content link = at
        <content identifier                                     property = location

    <syntax id = Reference                                      base = LifeTime
        <content link = backtick
        <content literal                               optional property = age

    <syntax id = Thrown                                         base = LifeTime
        <content link = hash

    <keyword id = let
    <keyword id = mutable
    <keyword id = var
    <keyword id = set
    <keyword id = class
    <keyword id = extends
    <keyword id = function
    <keyword id = method
    <keyword id = this

    <punctuation id = leftCurly         value = "{"
    <punctuation id = rightCurly        value = "}"
    <punctuation id = leftParen         value = "("
    <punctuation id = rightParen        value = ")"
    <punctuation id = leftBracket       value = "["
    <punctuation id = rightBracket      value = "]"
    <punctuation id = dot               value = "."
    <punctuation id = comma             value = ","
    <punctuation id = colon             value = ":"
<!--<punctuation id = semicolon         value = ";"-->
    <punctuation id = question          value = "?"
<!--<punctuation id = exclamation       value = "!"-->
    <punctuation id = at                value = "@"
    <punctuation id = hash              value = "#"
    <punctuation id = dollar            value = "$"
<!--<punctuation id = underscore        value = "_"-->
    <punctuation id = backtick          value = "`"

  </grammar>
