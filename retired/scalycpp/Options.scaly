class Options {

    let files: string[]
    let outputName: string
    let directory: string

    constructor(input: string[], output: string, dir: string) {
        files = input
        outputName = output
        directory = dir
    }

    static function parseArguments(args: string[]): Options throws OptionsError {
        let length: number = args.length()
        mutable output: string = null
        mutable dir: string = null
        mutable input: string[]$ = new string[]()
        mutable i: number = 0
        while i < length {
            if length < 2 || (args[i]).charAt(0) != '-' {
                input.push(args[i])
                i++
                continue
            }
            switch (args[i]).charAt(1) {
                case 'o': {
                    i++
                    if i == length
                        throw invalidOption(args[i - 1])
                    else
                        output = args[i]
                }
                case 'd': {
                    i++
                    if i == length
                        throw invalidOption(args[i - 1])
                    else
                        dir = args[i]
                }
                default:
                    throw unknownOption(args[i])
            }
            i++
        }
        if output == null
            throw noOutputOption
        if input.length() == 0
            throw noFilesToCompile

        return(new Options(new string[](input), output, dir))
    }
}

