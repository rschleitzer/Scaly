  <!DOCTYPE grammar SYSTEM "grammar.dtd">

  <grammar>

    <syntax id = Program                                        program
        <content link = File                  multiple          property = files

    <syntax id = File                                           top
        <content link = Declaration           multiple optional property = declarations
        <content link = Statement             multiple optional property = statements

    <syntax id = Declaration                  multiple abstract
        <content link = Define
        <content link = Function

    <syntax id = Define                                         base = Declaration
        <content link = def
        <content link = Name                                    property = name
        <content link = Definition                              property = definition
        <content link = semicolon                      optional

    <syntax id = Definition                            abstract
        <content link = Class
        <content link = Namespace
        <content link = Union

    <syntax id = Class                                          base = Definition
        <content link = Structure                               property = structure
        <content link = Body                           optional property = body

    <syntax id = Namespace                                      base = Definition
        <content link = Body                                    property = body

    <syntax id = Union                                          base = Definition
        <content link = Variant               multiple          property = statements

    <syntax id = Variant                      multiple
        <content link = Name                                    property = name
        <content link = Structure                      optional property = structure
        <content link = Body                           optional property = body

    <syntax id = Name
        <content identifier                                     property = name

    <syntax id = Structure
        <content link = left_paren
        <content link = Component             multiple optional property = components
        <content link = right_paren

    <syntax id = Body
        <content link = left_brace
        <content link = Declaration           multiple optional property = components
        <content link = right_brace

    <syntax id = Component                    multiple
        <content identifier                                     property = name
        <content link = TypeAnnotation                 optional property = type_annotation
        <content link = comma                          optional

    <syntax id = Function
        <content link = fn
        <content link = TypeSpec                                property = operand
        <content link = TypeSpec                                property = operator
        <content link = TypeAnnotation                 optional property = type_annotation
        <content link = Expression                     optional property = expression

    <syntax id = Statement                   multiple abstract
        <content link = Calculation
        <content link = Let

    <syntax id = Let                                            base = Statement
        <content link = let
        <content link = Binding                                 property = binding

    <syntax id = Binding
        <content identifier                                     property = name
        <content link = TypeAnnotation                 optional property = type_annotation
        <content link = Calculation                             property = calculation

    <syntax id = Calculation                                    base = Statement
        <content link = Operation                               property = operation
        <content link = semicolon                      optional

    <syntax id = Operation
        <content link = Operand               multiple          property = op

    <syntax id = Operand                      multiple          base = Statement
        <content link = Expression                              property = primary

    <syntax id = Expression                            abstract
        <content link = Constant
        <content link = Name
        <content link = Instruction

    <syntax id = Constant                                       base = Expression
        <content literal                                        property = literal

    <syntax id = Instruction                                    base = Expression
        <content link = instruction

    <syntax id = TypeAnnotation
        <content link = colon
        <content link = TypeSpec                                property = type_spec

    <syntax id = TypeSpec                              abstract
        <content link = TypeName

    <syntax id = TypeName                                       base = TypeSpec
        <content link = Name                                    property = name

    <keyword id = def
    <keyword id = fn
    <keyword id = instruction
    <keyword id = let

    <punctuation id = semicolon         value = ";"
    <punctuation id = left_paren        value = "("
    <punctuation id = right_paren       value = ")"
    <punctuation id = left_brace        value = "{"
    <punctuation id = right_brace       value = "}"
    <punctuation id = comma             value = ","
    <punctuation id = colon             value = ":"

  </grammar>
