  <!DOCTYPE grammar SYSTEM "grammar.dtd">

  <grammar>

    <syntax id = Program                                        program
        <content link = File                  multiple          property = files

    <syntax id = File                                           top
        <content link = Declaration           multiple optional property = declarations
        <content link = Statement             multiple optional property = statements

    <syntax id = Declaration                  multiple abstract
        <content link = Definition
        <content link = Function
        <content link = Use

    <syntax id = Definition
        <content link = def
        <content link = Name                                    property = name
        <content link = Concept                                 property = concept
        <content link = semicolon                      optional

    <syntax id = Name
        <content identifier                                     property = name
        <content link = Extension             multiple optional property = extensions

    <syntax id = Extension                    multiple
        <content link = dot
        <content identifier                                     property = name

    <syntax id = Concept                              abstract
        <content link = Class
        <content link = Namespace
        <content link = Union
        <content link = Constant

    <syntax id = Class
        <content link = Structure                               property = structure
        <content link = Body                           optional property = body

    <syntax id = Namespace
        <content link = Body                                    property = body

    <syntax id = Union
        <content link = Tag                   multiple          property = tags

    <syntax id = Tag                          multiple
        <content link = Name                                    property = name
        <content link = Item                           optional property = item

    <syntax id = Item                                  abstract
        <content link = Variant
        <content link = Enum

    <syntax id = Variant
        <content link = Structure                               property = structure
        <content link = Body                           optional property = body

    <syntax id = Enum
        <content literal                                        property = literal

    <syntax id = Constant
        <content literal                                        property = literal

    <syntax id = Structure
        <content link = left_paren
        <content link = Component             multiple optional property = components
        <content link = right_paren

    <syntax id = Body
        <content link = left_curly
        <content link = Declaration           multiple optional property = declarations
        <content link = right_curly

    <syntax id = Component                    multiple
        <content identifier                                     property = name
        <content link = TypeAnnotation                 optional property = type_annotation
        <content link = comma                          optional

    <syntax id = TypeAnnotation
        <content link = colon
        <content link = TypeSpec                                property = type_spec

    <syntax id = TypeSpec                              abstract
        <content link = Structure
        <content link = Type

    <syntax id = Type
        <content link = Name                                    property = name
        <content link = GenericArguments               optional property = generics
        <content link = Optional                       optional property = optional

    <syntax id = GenericArguments
        <content link = left_bracket
        <content link = GenericArgument       multiple optional property = generics
        <content link = right_bracket

    <syntax id = GenericArgument              multiple
        <content link = Type                                    property = type_spec
        <content link = comma                          optional

    <syntax id = Optional
        <content link = question

    <syntax id = Function
        <content link = fn
        <content link = TypeSpec                                property = operand
        <content link = TypeSpec                       optional property = operator
        <content link = Returns                        optional property = returns_annotation
        <content link = Throws                         optional property = throws_clause
        <content link = Implementation                          property = implementation
        <content link = semicolon                      optional

    <syntax id = Returns
        <content link = returns
        <content link = TypeSpec                                property = throws_type

    <syntax id = Throws
        <content link = throws
        <content link = TypeSpec                                property = throws_type

    <syntax id = Implementation                        abstract
        <content link = Expression
        <content link = Extern
        <content link = Instruction
        <content link = Intrinsic

    <syntax id = Extern
        <content link = extern

    <syntax id = Instruction
        <content link = instruction

    <syntax id = Intrinsic
        <content link = intrinsic

    <syntax id = Use
        <content link = use
        <content link = Name                                    property = name
        <content link = semicolon                      optional

    <syntax id = Statement                   multiple abstract
        <content link = Calculation
        <content link = Let
        <content link = Var
        <content link = Mutable
        <content link = Set
        <content link = Continue
        <content link = Break
        <content link = Return
        <content link = Throw

    <syntax id = Let
        <content link = let
        <content link = Binding                                 property = binding

    <syntax id = Var
        <content link = var
        <content link = Binding                                 property = binding

    <syntax id = Mutable
        <content link = mutable
        <content link = Binding                                 property = binding

    <syntax id = Binding
        <content identifier                                     property = name
        <content link = TypeAnnotation                 optional property = type_annotation
        <content link = Calculation                             property = calculation

    <syntax id = Set
        <content link = set
        <content link = Operation                               property = target
        <content link = colon
        <content link = Calculation                             property = source

    <syntax id = Calculation
        <content link = Operation                               property = operation
        <content link = semicolon                      optional

    <syntax id = Operation
        <content link = Operand               multiple          property = op

    <syntax id = Operand                      multiple
        <content link = Expression                              property = primary
        <content link = Postfix               multiple optional property = postfixes

    <syntax id = Postfix                      multiple abstract
        <content link = MemberAccess
        <content link = Catcher

    <syntax id = MemberAccess
        <content link = dot
        <content link = Name                                    property = member

    <syntax id = Catcher
        <content link = Catch                 multiple          property = catchers
        <content link = Drop                           optional property = dropper

    <syntax id = Catch                        multiple
        <content link = catch
        <content link = Operation                               property = condition
        <content link = colon
        <content link = Block                                   property = handler

    <syntax id = Drop
        <content link = drop
        <content link = Block                                   property = handler

    <syntax id = Continue
        <content link = continue
        <content link = Loop                           optional property = name
        <content link = semicolon                      optional

    <syntax id = Loop
        <content link = loop
        <content identifier                                     property = name

    <syntax id = Break
        <content link = break
        <content link = Loop                           optional property = name
        <content link = Calculation                             property = result

    <syntax id = Return
        <content link = return
        <content link = Calculation                    optional property = result

    <syntax id = Throw
        <content link = throw
        <content link = Calculation                    optional property = result

    <syntax id = Expression                            abstract
        <content link = Literal
        <content link = Name
        <content link = Object
        <content link = Array
        <content link = Block
        <content link = If
        <content link = Match
        <content link = For
        <content link = While
        <content link = Repeat
        <content link = SizeOf

    <syntax id = Literal
        <content literal                                        property = literal

    <syntax id = Object
        <content link = left_paren
        <content link = Field                 multiple optional property = fields
        <content link = right_paren

    <syntax id = Field                        multiple
        <content link = Operation                               property = operation
        <content link = Value                          optional property = value
        <content link = comma                          optional

    <syntax id = Value
        <content link = colon
        <content link = Operation                               property = value

    <syntax id = Array
        <content link = left_bracket
        <content link = Element               multiple          property = elements
        <content link = right_bracket

    <syntax id = Element                      multiple
        <content link = Operation                               property = operation
        <content link = comma                          optional

    <syntax id = Block
        <content link = left_curly
        <content link = Statement             multiple optional property = statements
        <content link = right_curly

    <syntax id = If
        <content link = if
        <content link = Operation                               property = condition
        <content link = colon
        <content link = Block                                   property = consequent
        <content link = Else                           optional property = alternative

    <syntax id = Else
        <content link = else
        <content link = Block                                   property = alternative

    <syntax id = Match
        <content link = match
        <content link = Operation                               property = scrutinee        
        <content link = Case                  multiple          property = cases
        <content link = Default                        optional property = alternative

    <syntax id = Case                         multiple
        <content link = case
        <content link = Operation                               property = condition
        <content link = colon
        <content link = Block                                   property = consequent
    
    <syntax id = Default
        <content link = default
        <content link = Block                          optional property = alternative

    <syntax id = For
        <content link = for
        <content link = Operation                               property = condition
        <content link = in
        <content link = Operation                               property = expression
        <content link = colon
        <content link = Label                          optional property = name
        <content link = Block                                   property = action

    <syntax id = Label
        <content link = label
        <content identifier                                     property = name

    <syntax id = While
        <content link = while
        <content link = Operation                               property = condition
        <content link = colon
        <content link = Label                          optional property = name
        <content link = Block                                   property = action

    <syntax id = Repeat
        <content link = repeat
        <content link = Label                          optional property = name
        <content link = Block                                   property = action

    <syntax id = SizeOf
        <content link = sizeof
        <content link = Type                                    property = type_spec

    <keyword id = break
    <keyword id = catch
    <keyword id = case
    <keyword id = continue
    <keyword id = def
    <keyword id = default
    <keyword id = drop
    <keyword id = else
    <keyword id = extern
    <keyword id = fn
    <keyword id = for
    <keyword id = if
    <keyword id = in
    <keyword id = instruction
    <keyword id = intrinsic
    <keyword id = label
    <keyword id = let
    <keyword id = loop
    <keyword id = match
    <keyword id = mutable
    <keyword id = return
    <keyword id = returns
    <keyword id = repeat
    <keyword id = set
    <keyword id = sizeof
    <keyword id = throw
    <keyword id = use
    <keyword id = var
    <keyword id = while
    <keyword id = throws

    <punctuation id = semicolon         value = ";"
    <punctuation id = dot               value = "."
    <punctuation id = comma             value = ","
    <punctuation id = colon             value = ":"
    <punctuation id = question          value = "?"
    <punctuation id = left_paren        value = "("
    <punctuation id = right_paren       value = ")"
    <punctuation id = left_curly        value = "{"
    <punctuation id = right_curly       value = "}"
    <punctuation id = left_bracket      value = "["
    <punctuation id = right_bracket     value = "]"

  </grammar>
