use Memory.Heap
use Memory.Stack
use Memory.StackBucket
use Memory.HeapBucket
use Memory.Page
use Memory.Page.'page size'

public define Bucket union
(
    Stack
    (
    )
    {
    }
    Heap
    (
    )
    {
    }
)
{
    public define 'bucket pages' 'size of'['size type']() * 8

    public function get(address: 'size type') returns pointer[Bucket]
    {
        // println!("address: {:X}", address);
        let 'address masked' address & ~('page size' * 'bucket pages' - 1)
        // println!("address_masked: {:X}", address_masked);
        'address masked' + 'size of'[Page]() 'cast to'[pointer[Bucket]]()
    }
}