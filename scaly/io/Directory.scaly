define Directory
()
{
    function exists(path: String) returns bool throws FileError {
        var r Region()

        var s: pointer[struct_stat] (struct_stat*)(*r.get_page()).allocate_raw(alignof(struct_stat), sizeof struct_stat) 
        let err stat(path.to_c_string(r.get_page()), s)
        if err = -1
        {
            if errno = ENOENT
            {
                return false
            } else {
                throw FileError(UnknownFileError(String(ep, path)))
            }
        } else {
            if S_ISDIR((*s).st_mode)
            {
                return true
            } else {
                return false
            }
        }
    }

    function create(path: String) throws FileError {
        var r Region()

        let err mkdir(path.to_c_string(r.get_page()), 0755)
        if err = -1
        {
            if errno = ENOENT
            {
                throw FileError(NoSuchFileOrDirectoryError(String(ep, path)))
            } else {
                throw FileError(UnknownFileError(String(ep, path)))
            }
        }

        return
    }

    function remove(path: String) throws FileError {
        var r Region()

        let err rmdir(path.to_c_string(r.get_page()))
        if err = -1
            throw FileError(UnknownFileError(String(ep, path)))
        
        return
    }
}
