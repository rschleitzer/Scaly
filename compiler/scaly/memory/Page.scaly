use scaly.containers

define Page
(
    next_object: pointer[void]
    current_page: pointer[Page]
    next_page: pointer[Page]
    exclusive_pages: List[pointer[Page]] 
)
{
    function reset(this) {
        set this.current_page: null
        set this.next_page: null
        set this.next_object: this + 1
        set this.exclusive_pages: List[pointer[Page]]()
    }

    function allocate_page returns pointer[Page] {
        if aligned_alloc(PAGE_SIZE, PAGE_SIZE) as page: pointer[Page] {
            page*.reset()
            page
        } else {
            null
        }
    }

    function clear(this) {
        this.deallocate_extensions()
        this.reset()
    }

    function is_oversized(this) returns bool {
        this.next_object = null
    }

    function get_capacity(this, align: size_t) returns size_t
    {
        var location this.next_object as[size_t]
        var aligned_location location + align - 1 & ((align - 1)~)
        var location_after_page this as[size_t] + PAGE_SIZE
        var capacity location_after_page - aligned_location
        capacity
    }

    function forget(this) {
        free(this&)
    }
}